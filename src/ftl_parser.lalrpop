
use std::str::FromStr;
use ::*;

grammar;

pub program: Program = <statement> => Program(<>);

statement: Statement = {
    "print " <e: expr> ";" => Statement::Print(e),
    "break;" => Statement::Break,
    switch => Statement::Switch(<>),
    "{" <s: stmt_list> "}" => Statement::Block(s),
};

switch: Switch = "switch " <arg: expr> "{" <cases: cases> "}" 
    => Switch { arg: Box::new(arg), cases: cases };

case: Case = "case " <n: num> ":" <s: statement> => Case(n, s);

expr: Expr = {
    r"read\(\)" => Expr::Read,
    num => Expr::I64(<>),
    "(" <e:expr> ")" => e,
};

stmt_list = <statement*>;

cases = <case*>;

num: i64 = <s:r"-?[0-9]+"> => i64::from_str(s).unwrap();

ident: String = r"[a-zA-Z_][a-zA-Z_0-9]*" => <>.to_owned();